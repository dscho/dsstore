=head1 DS_Store Format

Some notes on the format of the Macintosh Finder's F<.DS_Store> files.

=head1 OVERVIEW

The Mac OS X Finder stores information about how it displays directories
and files in files named F<.DS_Store> in each directory which it has touched.
(This seems to be a departure from the pre-OSX method of storing all the
information in one file at the root of each filesystem).
The format is not documented by Apple.
The information in this file is based on the reverse-engineering notes
by Mark Mentovai published on the Mozilla wiki,
and further investigation by me (Wim Lewis).

=head1 FILE FORMAT

The F<.DS_Store> file holds a series of records giving attributes of
the files in the directory or of the directory itself (referred to as
F<.>). These records are stored in a B-tree, and the pages of the
B-tree are stored in the file by a "buddy allocator" along with a
small amount of metadata. The allocator also provides a level of
indirection, from small integers to file offsets, presumably allowing
blocks to be relocated as they grow and shrink.

The file is generally big-endian. Unless otherwise noted, an "integer"
is a four-byte (32-bit) big-endian number, probably unsigned (but I'm
not always sure about that).

=head2 Records

A record has the following format:

=over

=item *

Filename length, in characters, as an integer. (4 bytes)

=item *

Filename, in big-endian UTF-16. Presumably with the same Unicode
composition rules as the HFS+ filesystem. (2 * length bytes)

=item *

Structure id or type, a FourCharCode indicating what property of the
file this entry describes. (4 bytes)

=item *

Data type (4 bytes), indicating what kind of data field follows:

=over

=item C<'long'>

An integer (4 bytes)

=item C<'shor'>

A short integer? Still stored as four bytes, but the first two are
always zero.

=item C<'bool'>

A boolean value, stored as one byte.

=item C<'blob'>

An arbitrary block of bytes, stored as an integer followed by that
many bytes of data.

=back

=back

A given structure id/type always seems to have the same type of data
associated with it, and any structure id appears at most once per
filename. Some only appear on files, and some only appear on the
containing directory (filename F<.>).
I've encountered the following record types:

=over

=item C<'BKGD'>

12-byte C<blob>, F<.> only. Indicates the background image of the
Finder window viewing this directory (in icon mode). It contains
either the 4CC C<PctB>, followed by the the length of the blob
stred in the C<'pict'> record, followed by an unknown integer; or the
4CC C<DefB>, followed by eight unknown bytes.

=item C<'ICVO'>

C<bool>, F<.> only. Unknown meaning. Always seems to be 1, so
presumably 0 is the default value.

=item C<'Iloc'>

16-byte C<blob>, attached to files. 
The file's icon location. Two 4-byte values representing the
horizontal and vertical positions of the icon's center (not
top-left). (Then, 6 bytes 0xff and 2 bytes 0?) For the purposes of the
center, the icon only is taken into account, not any label. The icon's
size comes from the icvo blob.

=item C<'LSVO'>

C<bool>, attached to directories and files. Purpose unknown.

=item C<'dilc'>

32-byte C<blob>, attached to files. Unknown, may indicate the icon
location when files are displayed on the desktop.

=item C<'dscl'>

C<bool>, attached to files. Unknown.

=item C<'fwi0'>

16-byte C<blob>, directories and files. Finder window information.
The data is first four two-byte values representing the top, left,
bottom, and right edges of the rect defining the content area of the
window. The next four bytes represent the view of the window: C<icnv>
is icon view, other values are C<clmv> and C<Nlsv>.
The next four bytes are unknown, and are either zeroes or
C<00 01 00 00>.

=item C<'fwsw'>

C<long>, directories and files. Unknown.

=item C<'fwvh'>

C<shor>, directories and files.
Finder window vertical height. If present, it overrides the height
defined by the rect in fwi0. The Finder seems to create these (at
least on 10.4) even though it will do the right thing for window
height with only an fwi0 around, perhaps this is because the stored
height is weird when accounting for toolbars and status bars. 

=item C<'icgo'>

8-byte C<blob>, directories and files.
Unknown. Probably two integers, and often the value C<00 00 00 00 00
00 00 04>.

=item C<'icsp'>

8-byte C<blob>, directories and files.
Unknown, usually all zeroes if present.

=item C<'icvo'>

18- or 26-byte C<blob>, F<.> only.
Icon view options. There seem to be two formats for this blob.

If the first 4 bytes are "icvo", then 8 unknown bytes (flags?), then 2 bytes
corresponding to the selected icon view size, then 4 unknown bytes
C<6e 6f 6e 65> (the text "none", guess that this is the "keep
arranged by" setting?).

If the first 4 bytes are "icv4", then
two unknown bytes,
a 4CC (I've seen C<none> and C<grid>),
another 4CC, typically C<botm>,
and then 12 unknown bytes (flags?).

=item C<'icvt'>

C<shor>, F<.> only.
Icon view text label (filename) size.

=item C<'info'>

40- or 48-byte C<blob>, attached to directories and files.
Unknown.

=item C<'lssp'>

8-byte C<blob>, directories and files.
Unknown. Possibly the scroll position in list view mode?

=item C<'lsvo'>

76-byte C<blob>, directories and files.
List view options. Seems to contain the columns displayed in list
view, their widths, and their sort ordering if any.

=item C<'lsvt'>

C<shor>, directories and files.
Unknown. Always seems to be 12.

=item C<'pict'>

Variable-length C<blob>, F<.> only.
Despite the name, this contains not a PICT image but an Alias record
(see I<Inside Macintosh: Files>) which resolves to the file containing
the actual background image. See also C<'BKGD'>.

=back

=head2 B-Tree

The records are stored in a B-tree structure. There is a master block
containing five integers, one of which points to the root node of the B-tree.

=head2 Buddy Allocator

B-tree pages and other info are stored in blocks managed by a buddy
allocator. The allocator maintains a list of the offsets and sizes of
blocks (referred to by small integers) and a freelist. 
The allocator also stores a small amount of metadata, including a
directory or table of contents which maps short strings to block
numbers. The only entry in that table of contents maps the string
C<DSDB> ("desktop services database"?) to the B-tree's master block.

=head1 CREDITS

Original reverse-engineering effort by Mark Mentovai,
L<https://wiki.mozilla.org/DS_Store_File_Format>. Some of the text
describing record types has been copied from that wiki page.

Further investigation and documntation by Wim Lewis.


